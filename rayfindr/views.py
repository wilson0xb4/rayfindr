from pyramid.view import view_config
# from pyramid.response import Response
import json
from rayfindr.calculations.sun_pos import time_and_location_to_sun_alt_azimuth as td
# from rayfindr.calculations.bounding_box import get_bounding_box as bb
from rayfindr.calculations.sun_vector import get_sun_vector as sv
from rayfindr.calculations.shadows import get_shadow_from_data as shadow
# from rayfindr.mapquery import spacial_filter as sf


@view_config(route_name='home', renderer='templates/mytemplate.pt')
def my_view(request):
    return {'project': 'rayfindr'}


@view_config(route_name='json_test', renderer='json')
def test_json(request):
    return {'text': 'Hello World'}


@view_config(route_name='api_request', renderer='json')
def api_request(request):
    api = json.loads(request.body)
    year = api['year']
    month = api['month']
    day = api['day']
    hour = api['hour']
    lat = api['lat']
    lon = api['lon']

    # """box will have four properties - lat_min/max and lon_min/max"""
    # box = bb(lat, lon, .25)
    # la_min = box.lat_min
    # la_max = box.lat_max
    # lo_min = box.lon_min
    # lo_max = box.lon_max
    # """This function will need to get handed to the shadow function and then handed to the client"""
    # shp_data = sf(la_min, la_max, lo_min, lo_max)
    """altitude and azimuth returned from sun position"""
    alt, az = td(year, month, day, hour, lat, lon)
    """vector x and y returned from sun vector"""
    vx, vy = sv(az, alt)

    # return Response(
    #     body=json.dumps({
    #         'alt': alt,
    #         'az': az,
    #         'vx': vx,
    #         'vy': vy
    #     }), content_type=b'application/json')

    test_data = [(700, [[-122.34926163617325, 47.62045662658992],
                    [-122.3492899953147, 47.62045422022144],
                    [-122.34931737329691, 47.62045983255712],
                    [-122.34933899282515, 47.62047248728353],
                    [-122.3493511421282, 47.62049001180723],
                    [-122.3493517052271, 47.62050933515622],
                    [-122.34934058549076, 47.62052714175043],
                    [-122.34931971995441, 47.62054036239886],
                    [-122.34929269013196, 47.6205466994618],
                    [-122.34926421357345, 47.620545078034866],
                    [-122.34923916172738, 47.62053573190211],
                    [-122.34922188030394, 47.62052030524769],
                    [-122.34921541042033, 47.62050147169665],
                    [-122.34922077815231, 47.620482480474244],
                    [-122.34923714826462, 47.620466632582506],
                    [-122.34926163617325, 47.62045662658992]])]

    # a1 = [
    #     (692, [[-122.34910310135119, 47.620573546549345], [-122.34908442093567, 47.620542070548716], [-122.349077359194, 47.620508493046266], [-122.34908245958158, 47.620474752665238], [-122.34909929280703, 47.62044283066767], [-122.34912697837856, 47.620414520905314], [-122.34916386462498, 47.62039154473463], [-122.34920779768932, 47.620375192989712], [-122.34925629090458, 47.620366430782049], [-122.34930643836954, 47.620365762812369], [-122.34935536450534, 47.620373227383766], [-122.34940021606828, 47.620388396507863], [-122.34943841086631, 47.620410372590911], [-122.34946772417635, 47.620437923122012], [-122.34948644523224, 47.620469371532643], [-122.34949346735674, 47.620502950440567], [-122.34948840710882, 47.620536689409164], [-122.34947153364577, 47.620568638991358], [-122.34944384739349, 47.620596921859551], [-122.34940696326764, 47.620619925980222], [-122.34936303003306, 47.62063627690268], [-122.34931457648644, 47.620645038624254], [-122.34926442875239, 47.620645706597507], [-122.34921546247125, 47.620638242518545], [-122.349170610773, 47.620623074220987], [-122.34913241378958, 47.620601070188805], [-122.34910310135119, 47.620573546549345]])
    # ]
    # a2 = [
    #     (692, [[-122.34931737329691, 47.620459832557117], [-122.34928999531471, 47.62045422022144], [-122.34926163617325, 47.62045662658992], [-122.34923714826462, 47.620466632582506], [-122.34922077815231, 47.620482480474244], [-122.34921541042033, 47.620501471696649], [-122.34922188030394, 47.620520305247688], [-122.34923916172738, 47.620535731902109], [-122.34926421357345, 47.620545078034866], [-122.34929269013196, 47.620546699461798], [-122.34931971995441, 47.620540362398863], [-122.34934058549076, 47.620527141750429], [-122.34935170522709, 47.620509335156221], [-122.3493511421282, 47.620490011807227], [-122.34933899282515, 47.620472487283529], [-122.34931737329691, 47.620459832557117]])
    # ]
    # b1 = [
    #     (665, [[-122.34911526659084, 47.620650439836375], [-122.34909956824747, 47.620642994121951], [-122.349059382452, 47.620613970797358], [-122.34902898751419, 47.620579935775467], [-122.3490097241784, 47.620542379856609], [-122.349002410453, 47.62050293754131], [-122.34900742033871, 47.620463303216518], [-122.34902448119848, 47.620425263540824], [-122.34905287000677, 47.620390445638968], [-122.34909133387073, 47.620360374837077], [-122.34913824715278, 47.620336387108743], [-122.34919145205433, 47.620319500756452], [-122.34924873961248, 47.620310484675294], [-122.34926201628737, 47.620310306931799], [-122.34930757364668, 47.620309700100812], [-122.3493652901445, 47.620317185216713], [-122.34941947739213, 47.620332641095409], [-122.34946771179715, 47.620355361447629], [-122.34950789762071, 47.620384384628295], [-122.34953833265959, 47.620418418990873], [-122.349557596331, 47.620455974820388], [-122.34956487005097, 47.620495445526501], [-122.34955990100654, 47.620535051449359], [-122.3495428405022, 47.620573091205195], [-122.34953656238621, 47.620580838634211], [-122.34951447208292, 47.620607916157383], [-122.3494759059173, 47.620637990264946], [-122.34942899363938, 47.620661970920509], [-122.34937574819571, 47.620678845325521], [-122.3493185945192, 47.620687902863423], [-122.3492598105741, 47.620688685871116], [-122.34920191953822, 47.62068116073948], [-122.3491477523102, 47.620665717081316], [-122.34911526659084, 47.620650439836375]])
    # ]
    # b2 = [
    #     (665, [[-122.34935536450534, 47.620373227383766], [-122.34930643836954, 47.620365762812369], [-122.34925629090458, 47.620366430782049], [-122.34920779768932, 47.620375192989712], [-122.34916386462498, 47.62039154473463], [-122.34912697837856, 47.620414520905314], [-122.34909929280703, 47.62044283066767], [-122.34908245958158, 47.620474752665238], [-122.349077359194, 47.620508493046266], [-122.34908442093567, 47.620542070548716], [-122.34910310135119, 47.620573546549345], [-122.34913241378958, 47.620601070188805], [-122.349170610773, 47.620623074220987], [-122.34921546247125, 47.620638242518545], [-122.34926442875239, 47.620645706597507], [-122.34931457648644, 47.620645038624254], [-122.34936303003306, 47.62063627690268], [-122.34940696326764, 47.620619925980222], [-122.34944384739349, 47.620596921859551], [-122.34947153364577, 47.620568638991358], [-122.34948840710882, 47.620536689409164], [-122.34949346735674, 47.620502950440567], [-122.34948644523224, 47.620469371532643], [-122.34946772417635, 47.620437923122012], [-122.34943841086631, 47.620410372590911], [-122.34940021606828, 47.620388396507863], [-122.34935536450534, 47.620373227383766]])
    # ]
    # c = [
    #     (700, [[-122.34926163617325, 47.62045662658992], [-122.34928999531471, 47.62045422022144], [-122.34931737329691, 47.620459832557117], [-122.34933899282515, 47.620472487283529], [-122.3493511421282, 47.620490011807227], [-122.34935170522709, 47.620509335156221], [-122.34934058549076, 47.620527141750429], [-122.34931971995441, 47.620540362398863], [-122.34929269013196, 47.620546699461798], [-122.34926421357345, 47.620545078034866], [-122.34923916172738, 47.620535731902109], [-122.34922188030394, 47.620520305247688], [-122.34921541042033, 47.620501471696649], [-122.34922077815231, 47.620482480474244], [-122.34923714826462, 47.620466632582506], [-122.34926163617325, 47.62045662658992]])
    # ]

    # full = a1 + a2 + b1 + b2 + c
    # first = a1 + b1 + c
    # second = a2 + b2 + c

    geojson = shadow((vx, vy), test_data)
    return geojson
